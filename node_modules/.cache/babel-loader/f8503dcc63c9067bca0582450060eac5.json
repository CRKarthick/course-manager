{"ast":null,"code":"import _objectSpread from \"C:\\\\React-Apps\\\\course-manager\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\React-Apps\\\\course-manager\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\React-Apps\\\\course-manager\\\\src\\\\ManageCourse.js\";\nimport React, { useEffect, useState } from 'react';\nimport { saveCourse, getCourseBySlug } from './api/courseApi';\n\nconst ManageCourse = props => {\n  const _useState = useState({\n    title: '',\n    authorId: null,\n    category: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        course = _useState2[0],\n        setCourse = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        errors = _useState4[0],\n        setErrors = _useState4[1];\n\n  useEffect(() => {\n    //    console.log(props.match.params.slug);\n    getCourseBySlug(props.match.params.slug).then(res => setCourse(res));\n  });\n\n  const handleChange = e => {\n    setCourse(_objectSpread({}, course, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const formIsValid = () => {\n    const _errors = {};\n    if (!course.title) _errors.title = 'Title is Required';\n    if (!course.authorId) _errors.authorId = 'Author ID is Required';\n    if (!course.category) _errors.category = 'Category is Required';\n    setErrors(_errors);\n    return Object.keys(_errors).length === 0;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!formIsValid()) return;\n    saveCourse(course).then(() => {\n      props.history.push('/courses');\n    }); //    console.log(e);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Manage Course\")), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"title\",\n    name: \"title\",\n    value: course.title,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), errors.title && React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, errors.title), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"authorId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Author ID\"), React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"authorId\",\n    name: \"authorId\",\n    value: course.authorId || '',\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"1\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"2\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"3\"))), errors.authorId && React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, errors.authorId), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Category\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"category\",\n    name: \"category\",\n    value: course.category,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), errors.category && React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, errors.category), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary mb-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Save\"))));\n};\n\nexport default ManageCourse;","map":{"version":3,"sources":["C:\\React-Apps\\course-manager\\src\\ManageCourse.js"],"names":["React","useEffect","useState","saveCourse","getCourseBySlug","ManageCourse","props","title","authorId","category","course","setCourse","errors","setErrors","match","params","slug","then","res","handleChange","e","target","name","value","formIsValid","_errors","Object","keys","length","handleSubmit","preventDefault","history","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { saveCourse, getCourseBySlug } from './api/courseApi';\r\n\r\nconst ManageCourse = props => {\r\n    const [course, setCourse] = useState({\r\n        title: '',\r\n        authorId: null,\r\n        category: '',\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        //    console.log(props.match.params.slug);\r\n        getCourseBySlug(props.match.params.slug).then(res => setCourse(res));\r\n    });\r\n\r\n    const handleChange = e => {\r\n        setCourse({ ...course, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const formIsValid = () => {\r\n        const _errors = {};\r\n\r\n        if (!course.title) _errors.title = 'Title is Required';\r\n        if (!course.authorId) _errors.authorId = 'Author ID is Required';\r\n        if (!course.category) _errors.category = 'Category is Required';\r\n\r\n        setErrors(_errors);\r\n\r\n        return Object.keys(_errors).length === 0;\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (!formIsValid()) return;\r\n        saveCourse(course).then(() => {\r\n            props.history.push('/courses');\r\n        });\r\n\r\n        //    console.log(e);\r\n    };\r\n    return (\r\n        <>\r\n            <div className='jumbotron'>\r\n                <h1>Manage Course</h1>\r\n            </div>\r\n            <div className='container'>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='title'>Title</label>\r\n                        <input\r\n                            type='text'\r\n                            className='form-control'\r\n                            id='title'\r\n                            name='title'\r\n                            value={course.title}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    {errors.title && (\r\n                        <div className='alert alert-danger'>{errors.title}</div>\r\n                    )}\r\n                    <div className='form-group'>\r\n                        <label htmlFor='authorId'>Author ID</label>\r\n                        <select\r\n                            className='form-control'\r\n                            id='authorId'\r\n                            name='authorId'\r\n                            value={course.authorId || ''}\r\n                            onChange={handleChange}\r\n                        >\r\n                            <option></option>\r\n                            <option>1</option>\r\n                            <option>2</option>\r\n                            <option>3</option>\r\n                        </select>\r\n                    </div>\r\n                    {errors.authorId && (\r\n                        <div className='alert alert-danger'>\r\n                            {errors.authorId}\r\n                        </div>\r\n                    )}\r\n                    <div className='form-group'>\r\n                        <label htmlFor='category'>Category</label>\r\n                        <input\r\n                            type='text'\r\n                            className='form-control'\r\n                            id='category'\r\n                            name='category'\r\n                            value={course.category}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    {errors.category && (\r\n                        <div className='alert alert-danger'>\r\n                            {errors.category}\r\n                        </div>\r\n                    )}\r\n                    <button type='submit' className='btn btn-primary mb-2'>\r\n                        Save\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ManageCourse;\r\n"]},"metadata":{},"sourceType":"module"}